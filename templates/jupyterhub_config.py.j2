from oauthenticator.github import GitHubOAuthenticator

# c.JupyterHub.authenticator_class = 'jhub_remote_user_authenticator.remote_user_auth.RemoteUserAuthenticator'
c.JupyterHub.authenticator_class = GitHubOAuthenticator


c.JupyterHub.extra_log_file = '{{ jupyterhub_log }}'
c.JupyterHub.hub_ip = '{{ jupyterhub_dockerhost_ip }}'
c.JupyterHub.ip = '0.0.0.0'
c.JupyterHub.port = 80
c.JupyterHub.proxy_api_ip = '{{ jupyterhub_dockerhost_ip }}'
c.JupyterHub.spawner_class = 'dockerspawner.DockerSpawner'
c.Spawner.debug = True
# c.Spawner.mem_limit = '2G'
{% if jupyterhub_enable_lab is defined and jupyterhub_enable_lab %}
c.Spawner.environment = { 'JUPYTER_ENABLE_LAB': 'yes' }
{% endif %}
c.DockerSpawner.hub_ip_connect = '{{ jupyterhub_dockerhost_ip }}'
c.DockerSpawner.image = '{{ jupyterhub_docker_image }}:{{ jupyterhub_docker_tag }}'

# leave this in, jic the auth-specific class doesn't work e.g. github
c.OAuthenticator.oauth_callback_url = '{{ jupyterhub_oauth2_callback_url }}'
c.OAuthenticator.client_id = '{{ jupyterhub_oauth2_client_id }}'
c.OAuthenticator.client_secret = '{{ jupyterhub_oauth2_client_secret }}'

# This is for github oauth2
c.GithubOAuthenticator.oauth_callback_url = '{{ jupyterhub_oauth2_callback_url }}'
c.GithubOAuthenticator.client_id = '{{ jupyterhub_oauth2_client_id }}'
c.GithubOAuthenticator.client_secret = '{{ jupyterhub_oauth2_client_secret }}'

{% if jupyterhub_config_allowed_users is defined and jupyterhub_config_allowed_users %}
c.Authenticator.allowed_users = { {{ jupyterhub_config_allowed_users|map("to_json")|join(', ') }} }
{% endif %}

# This line will setup no admins
#c.Authenticator.admin_users = set()
# This line will setup two admins, edwins and nirav
#c.Authenticator.admin_users = {'edwins','nirav','tyson-swetnam'}
c.Authenticator.admin_users = { {{ jupyterhub_config_admin_users|map("to_json")|join(', ') }} }
